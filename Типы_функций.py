# #print() #ввод данных в программу
# #input() #ввести данные в программе
# print(dir()) #вывести атрибуты определенного обьекта
#
# #print(type('Привет'))       #(str)string - строка
# #print(type(123))            #(int)integed - целое число
# #print(type(123.1))          #(float) - число с плавающей точкой
# #print(len('123'))           #(len) - количество символов в строке ( так и в списке символов)
# #print(type(True and False)) #(bool)boolean - булевы значения(одно из двух значений верно и неверно)
#                                                                    #and (и) or (или)
#                 #(sum()) сумма чисел в списке
#                 #(sorted()) сортировка списка в алфавитном порядке
#
# #print(input("Как дела? "))   #print(input()) - ввод данных в программу введенных в программе
# #input(999  )
#
# #my_string = input('какой год? ')
# #print(len('какой год? '))
#
# print('Ввод данных')
# print(input('Напиши слово  ').count('')-1)     #количество символов в написаном слове в программе
#
# input('какой год? '.upper())                     #большие буквы
# input('какой год? '.lower())                     #маленькие буквы
# input('какой год? '.replace(' ',''))             #замена что-то на что-то
# input('какой год? '[0])
# input('какой год? '[-1])
#
# print('Особенности  списков и их редактирования')
# r0 = ["6","ytu", 6]                  #(тип list) изменяемый список (только в квадратных скобках)
# print(r0)
# print(type(r0))
# r1 = ("6","ytu", 6)                 #(тип tuple)КОРТЕЖ - неизменяемый список(можно вообще без скобок (круглых) )
# print(r1)
# print(type(r1))
# r2 = {'Anna': 9091788787,'Anton': 7873436754,'Sasha':3452132324} #(тип dict) - (ключ : значение) только фигурные скобки
# print(r2)
# print(type(r2))
#
# r = (['wi','hi','end'],'sr',87,57)
# print(r)
# print((type(r)),'(КОРТЕЖ и квадратные скобки в нем)')
# r[0][1] = 'cool' #в кортеже можно заменять элементы в квадратных скобках (1.номер индекса элементов в квадратных скобках из всего списка [0], 2.номер индекса в квадратных скобках [1]
# print('В КОРТЕЖЕ можно заменять элементы в квадратных скобках')
# print(r)
#
#
# print('Редактировние списка')
#food = ['apple', 'banana', 456, 789]
# print(food)
# food[1] = 'go'                      #замена всписке
# print(food)
# food.remove('apple')                #удаление из списка с помощью конкретного имени в списке
# print(food)
# del food[1]                         #удаление из списка с помощью индекса определенной позиции
# print(food)
# food.append(123)                    #(.append()) добавление в основной список
# print(food)
# food.extend([777, 'ваза', 'слива']) #(.extend([]) добавление дополнительного списока в основной список
# print(food)
#
# food.extend('ХОЛ')                  #(.extend()) добавление в основной список каждого символа по отдельности или элементов из другого списка
# print(food)
# r = food.pop(4)                      # (.pop()) удаляет из списка элемент по индексу сохраняя его в переменной
# print(r)
# print('Наличие123',(123 in food))                  #проверка наличия элемента в списке
# print('Наличие123',(123 not in food))              #проверка отсутствия элемента в списке
# print(food)

# print('Словарь(тип списка)')
# r2 = {'Anna': 9091788,'Anton': 7873436754,'Sasha': 3452132324} #(тип dict()) - (ключ(key): значение(value(ценность))) только фигурные скобки
#                                                                #(zip()) обьединение списков в словарь (ключ: значение)
#
# print(r2)
# print(type(r2))
# print(r2['Anna'])                                                 #извлечение конкретного значения с помощью ключа (так же как при индексации)
# print(r2.get('Anton'))
# print((r2.get('Ant')), '(по умалчанию)')                          #(.get) нахождение и извлечение значения с помощью имени
# print(r2.get('Anto', 'Такого нет(вместо "None",'
#             'если не окажеться в конкретном списке такого ключа)'))
# r2['Anna'] = 2346744543                                           #замена в списке у определенного ключа самого значения
# print(r2)
# r2['Misha'] =9807845683                                           #добавление дополнительного ключа со значением
# print(r2)
# r2.update({'Dima': 123456, 'Mas': 4563218785})                    #(.update) добавление дополнительного списка в общий список
# print(r2)
# del r2['Sasha']                                                   #(del) удаление ключа со значением из списка
# print(r2)
#
# t = r2.pop('Anna')                                                #(.pop) удаляет ключ сохраняя его значение в переменной
# print(r2)
# print(t)
#
# print(r2.keys())                                                  #(.keys) список только ключей основного списка
# print(r2.values())                                                #(.values) список только значений ключей основного списка
# print(r2.items())                                                 #(.items)возврат написание пары ключ значение
#
# print('Множества (один из видов списков типа данных)')
# y = [6,5,5,4,'fghh', 'hhfdd', 0,6,4,3,7]
# list = set(y)
# print(y)
# print(list)                            #(set()) команда множества (упорядовачевание значений удаляя повторы)
#
# #print(list.remove(1))
# #print(list.remove(23))
# #print(list.discard(1))
# #print(list.discard(23))
#
#
# if first == second == third:                                # (if   :) - значение ЕСЛИ
#     print(3)                                                #(print ()) писать через 4-ре пробела
# elif first == second or first == third or second == third:  #(elif  :) - значение ЕСЛИ ТОЛЬКО
#     print(2)                                                #(else  :) - значение ИНАЧЕ
# else:                                                       #(or) - или
#     print(0)                                                #(and) - и
#                                                             #(not) - нет
                                                              #(*type) - произвольное количество позиционных параметров
                                                              #(**values) - произвольное количество именованных параметров

# name = input('Введите имя: ')
# print('Привет, name)
# if name == 'Денис':                  # если конкретно что-то будет написано в переменной, (например 'Денис')
#        print('Здравствуй друг')            то можно уточнить и вывести (print) уже конкретную желаемую информацию
                                                 для этой конкретной переменной.

# >>> set([1,2,3])
# {1, 2, 3}
# >>> tuple({5,6,7})
# (5, 6, 7)
# >>> list('hello')
# ['h', 'e', 'l', 'l', 'o']
